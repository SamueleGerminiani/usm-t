// /////////////////////////////////////////////////////////////////////////
// C++ code automatically generated by hif2sc
// Part of HIFSuite - Version 
// Site: www.hifsuite.com - Contact: hifsuite@edalab.it
//
// HIFSuite copyright: EDALab s.r.l. - Networked Embedded Systems
// Site: www.edalab.it - Contact: info@edalab.it
// /////////////////////////////////////////////////////////////////////////


#include "../inc/spec2.hpp"



spec2::spec2() :
    hif_fault_node(muffin::hif_next_instance_counter(), 0ULL),
    b_2_old(false),
    a_2_old(false),
    clock_old(false),
    hif_a2t_data(
    nullptr,
    nullptr,
    nullptr,
    nullptr),
    process_in_queue(false)
{
    if (hif_fault_list_root != nullptr)
    {
        hif_fault_list_root->prev = &hif_fault_node;
        hif_fault_node.next = hif_fault_list_root;
    }
    hif_fault_list_root = &hif_fault_node;
}


spec2::~spec2()
{}


void spec2::update_input_queue( bool synch_phase )
{
    process_in_queue = false;
    clock_old = *hif_a2t_data.clock;
    a_2_old = *hif_a2t_data.a_2;
    b_2_old = *hif_a2t_data.b_2;
}


void spec2::update_event_queue()
{
    process_in_queue = false;
    update_input_queue( false );
}


void spec2::flag_elaboration()
{
}


void spec2::start_of_simulation()
{
    *hif_a2t_data.c_2 = true;
}


void spec2::initialize()
{
    start_of_simulation();
}





// /////////////////////////////////////////////////////////////////////////
// C++ code automatically generated by hif2sc
// Part of HIFSuite - Version 
// Site: www.hifsuite.com - Contact: hifsuite@edalab.it
//
// HIFSuite copyright: EDALab s.r.l. - Networked Embedded Systems
// Site: www.edalab.it - Contact: info@edalab.it
// /////////////////////////////////////////////////////////////////////////


#ifndef MUFFIN_DATATYPES_HH
#define MUFFIN_DATATYPES_HH

#include <cmath>
#include <stdint.h>



namespace muffin {

extern uint64_t instance_number;
extern uint64_t fault_number;
extern int64_t stuck_at;

uint64_t toggle_bit( uint64_t position );


uint64_t rise_bit( uint64_t variable, uint64_t position );


uint64_t clear_bit( uint64_t variable, uint64_t position );


bool check_instance( uint64_t instance );


bool check_location( uint64_t offset, uint64_t dimension );


bool is_active( uint64_t instance, uint64_t offset, uint64_t dimension );


int8_t inject( uint64_t instance, uint64_t offset, uint64_t dimension, int8_t variable
     );


int16_t inject_renamed( uint64_t instance, uint64_t offset, uint64_t dimension,
     int16_t variable );


int32_t inject_renamed_0( uint64_t instance, uint64_t offset, uint64_t dimension,
     int32_t variable );


int64_t inject_renamed_1( uint64_t instance, uint64_t offset, uint64_t dimension,
     int64_t variable );


uint8_t inject_renamed_2( uint64_t instance, uint64_t offset, uint64_t dimension,
     uint8_t variable );


uint16_t inject_renamed_3( uint64_t instance, uint64_t offset, uint64_t dimension,
     uint16_t variable );


uint32_t inject_renamed_4( uint64_t instance, uint64_t offset, uint64_t dimension,
     uint32_t variable );


uint64_t inject_renamed_5( uint64_t instance, uint64_t offset, uint64_t dimension,
     uint64_t variable );


bool inject( uint64_t instance, uint64_t offset, uint64_t dimension, bool variable
     );

extern uint64_t hif_global_instance_counter;

uint64_t hif_next_instance_counter();


} // end namespace muffin


#endif
